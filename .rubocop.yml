---

require:
  - rubocop-performance

# The behavior of RuboCop can be controlled via the .rubocop.yml
# configuration file. It makes it possible to enable/disable
# certain cops (checks) and to alter their behavior if they accept
# any parameters. The file can be placed either in your home
# directory or in some project directory.
#
# RuboCop will start looking for the configuration file in the directory
# where the inspected file is and continue its way up to the root directory.
#
# See https://docs.rubocop.org/rubocop/configuration

################################ Style ################################

Style/AccessModifierDeclarations:
  Enabled: false
  EnforcedStyle: group

Style/AsciiComments:
  Enabled: false

Style/NumericLiterals:
  Enabled: false

Style/Documentation:
  Enabled: false

Style/DocumentationMethod:
  Enabled: false
  RequireForNonPublicMethods: false

Style/CommentedKeyword:
  Enabled: false

Style/Next:
  Enabled: false

Style/NumericPredicate:
  Enabled: false

Style/BlockDelimiters:
  Enabled: false

Style/IfUnlessModifier:
  Enabled: false

################################ Layout ################################

Layout/TrailingWhitespace:
  Enabled: false

Layout/SpaceAroundOperators:
  Enabled: true
  # When `true`, allows most uses of extra spacing if the intent is to align
  # with an operator on the previous or next line, not counting empty lines
  # or comment lines.
  AllowForAlignment: true

Layout/SpaceInsideArrayLiteralBrackets:
  Enabled: true
  EnforcedStyle: no_space
  EnforcedStyleForEmptyBrackets: no_space

Layout/SpaceInsideBlockBraces:
  Enabled: true
  EnforcedStyle: space
  EnforcedStyleForEmptyBraces: no_space
  SpaceBeforeBlockParameters: true

Layout/SpaceInsideHashLiteralBraces:
  Enabled: true
  EnforcedStyle: space
  EnforcedStyleForEmptyBraces: no_space

Layout/MultilineMethodCallIndentation:
  Enabled: true
  EnforcedStyle: indented_relative_to_receiver
  # By default, the indentation width from Layout/IndentationWidth is used
  # But it can be overridden by setting this parameter
  IndentationWidth: ~

Layout/ExtraSpacing:
  Enabled: true
  AllowForAlignment: true
  AllowBeforeTrailingComments: true
  ForceEqualSignAlignment: false

Layout/LineLength:
  Enabled: false
  AutoCorrect: false
  Max: 80
  # To make it possible to copy or click on URIs in the code, we allow lines
  # containing a URI to be longer than Max.
  AllowHeredoc: true
  AllowURI: true
  URISchemes:
    - http
    - https
  # The IgnoreCopDirectives option causes the LineLength rule to ignore cop
  # directives like '# rubocop: enable ...' when calculating a line's length.
  IgnoreCopDirectives: false
  # The IgnoredPatterns option is a list of !ruby/regexp and/or string
  # elements. Strings will be converted to Regexp objects. A line that matches
  # any regular expression listed in this option will be ignored by LineLength.
  IgnoredPatterns: []

Layout/EmptyLineAfterGuardClause:
  Enabled: false

################################ Metrics ################################

Metrics/AbcSize:
  Enabled: false
  Max: 15

Metrics/BlockLength:
  Enabled: false
  CountComments: false  # count full line comments?
  Max: 25
  ExcludedMethods:
    # By default, exclude the `#refine` method, as it tends to have larger
    # associated blocks.
    - refine
  Exclude:
    - '**/*.gemspec'

Metrics/BlockNesting:
  Enabled: false
  CountBlocks: false
  Max: 3

Metrics/ClassLength:
  Enabled: false
  CountComments: false  # count full line comments?
  Max: 100

# Avoid complex methods.
Metrics/CyclomaticComplexity:
  Enabled: false
  Max: 6

Metrics/MethodLength:
  Enabled: false
  CountComments: false  # count full line comments?
  Max: 10
  ExcludedMethods: []

Metrics/ModuleLength:
  Enabled: false
  CountComments: false  # count full line comments?
  Max: 100

Metrics/ParameterLists:
  Enabled: false
  Max: 5
  CountKeywordArgs: true

Metrics/PerceivedComplexity:
  Enabled: false
  Max: 7
